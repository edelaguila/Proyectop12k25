#include <iostream>
#include <fstream>
#include <string>
#include "Empleados.h"
#include "Cliente.h"
#include "Proveedores.h"
#include "Contabilidad.h"
#include "Auditoria.h"
#include "Usuario.h"
#include <conio.h> //para la función getch() que permite capturar teclas sin mostrarlas
#include "Nominas.h"
#include "Bitacora.h"
using namespace std;



// Pausar el programa esperando ENTER
void pausar() {
    cout << "\nPresione ENTER para continuar...";
    cin.ignore();
    cin.get();
}

// Mostrar el menú principal
void mostrarMenu() {
    //se crean objetos de cada clase para poder usar sus funciones
    Empleados empleados;
    Cliente cliente;
    Proveedor proveedor;
    Contabilidad contabilidad;
    Auditoria auditoria;
    Nominas nominas;
    Bitacora bitacora;

    int opcion;
    do {
        cout << "\n------------------------------------";
        cout << "\n        SISTEMA BANCARIO";
        cout << "\n------------------------------------";
        cout << "\n 1. Nominas";
        cout << "\n 2. Cliente";
        cout << "\n 3. Empleados";
        cout << "\n 4. Contabilidad";
        cout << "\n 5. Auditoria";
        cout << "\n 6. Proveedores";
        cout << "\n 7. Bitacora";
        cout << "\n 8. Salir";
        cout << "\n------------------------------------";
        cout << "\nSeleccione una opcion: ";
        cin >> opcion;

        // Validar entrada incorrecta
        if (cin.fail()) {
            cin.clear(); // limpiar error
            cin.ignore(10000, '\n'); // descartar entrada
            opcion = 0;
        }

        switch (opcion) {
    case 1:
        nominas.menuNominas();
        bitacora.insertar("Admin", 4000, "Nominas", "Ingresó al módulo de Nóminas");
        break;
    case 2:
        cliente.menuCliente();
        bitacora.insertar("Admin", 4100, "Clientes", "Ingresó al módulo de Clientes");
        break;
    case 3:
    empleados.menuEmpleados();  // Aquí se llama al método correcto de la clase Empleados
    bitacora.insertar("Admin", 4001, "Empleados", "Ingresó al módulo de Empleados");
        break;

    case 4:
        contabilidad.generarReporte();
        bitacora.insertar("Admin", 4301, "Contabilidad", "Generar reporte contable");
        break;
    case 5:
        auditoria.revisarTransacciones();
        bitacora.insertar("Admin", 4401, "Auditoría", "Revisar transacciones");
        break;
    case 6:
        proveedor.menuProveedor();
        bitacora.insertar("Admin", 4200, "Proveedores", "Ingresó al módulo de Proveedores");
        break;
    case 7:
        bitacora.menuBitacora();
        bitacora.insertar("Admin", 4402, "Sistema", "Usuario cerró sesión");
        break;
    case 8:
    bitacora.insertar("Admin", 4901, "Sistema", "Usuario cerró sesión");
    cout << "\nSaliendo del sistema... Gracias!\n";
    break;

    default:
        cout << "\nOpción inválida. Intente de nuevo.\n";
        bitacora.insertar("Admin", 4902, "Sistema", "Intento de opción inválida");
        break;
}

                pausar();


    } while (opcion != 8);
}

// Función principal
int main() {
    while (true) {
        // Mostrar el menú de autenticación
        if (Usuario::menuAutenticacion()) {
            // Si inicia sesión con éxito, mostrar menú bancario
            mostrarMenu();

            // Después de salir del menú bancario:
            pausar();
            Usuario::limpiarPantalla();  // si la hiciste pública o moviste la función
        } else {
            cout << "\nAutenticación fallida o el usuario decidió salir.\n";
            break; // salir completamente del programa
        }
    }

    return 0;
}



